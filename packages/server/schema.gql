# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CoopEventEntity {
  id: ID!
  sequenceId: Int!
  type: String!
  scopeType: String!
  scopeId: ID!
  happenedAt: DateTime!
  insertedAt: DateTime!
  data: JSONObject!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type MembershipEntity {
  id: ID!
  memberId: String!
  membershipTypeId: String!
  startDate: DateTime!
  endDate: DateTime!
  status: String!
  member: MemberEntity!
  membershipType: MembershipTypeEntity
}

type MembershipTypeEntity {
  id: UUID!
  createdAt: DateTime!
  name: String!
  level: String!
  members: [MemberEntity!]!
  memberships: [MembershipEntity!]!
}

"""
A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
"""
scalar UUID

type ShiftEntity {
  id: String!
  startsAt: DateTime!
  endsAt: DateTime!
  termId: String!
  slots: JSONObject!
  members: [MemberEntity!]!
  term: TermEntity!
  shiftAssignments: [ShiftAssignmentEntity!]!
}

type MemberEntity {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  meta: JSONObject!
  memberships: [MembershipEntity!]!
  shifts: [ShiftEntity!]!
}

type CommandResponse {
  events: [JSONObject!]!
}

type ShiftAssignmentEntity {
  id: String!
  memberId: String!
  shiftId: String!
  member: MemberEntity!
  shift: ShiftEntity!
  createdBy: String!
  slot: String!
}

type TermEntity {
  id: String!
  name: String!
  startDate: DateTime!
  endDate: DateTime!
  lengthInDays: Float!
}

type AssignShiftCommandResponse {
  events: [JSONObject!]!
}

type UnassignShiftCommandResponse {
  events: [JSONObject!]!
}

type Query {
  getMemberships: [MembershipEntity!]!
  eventsByScopeType(scopeType: String!, scopeId: String!): [CoopEventEntity!]!
  getShiftById(id: String!): ShiftEntity!
  shifts(from: DateTime, to: DateTime): [ShiftEntity!]!
  getAssignments: [ShiftAssignmentEntity!]!
  getMembers(membershipLevel: String): [MemberEntity!]!
}

type Mutation {
  createMembership(createMembership: CreateMembershipCommand!): CommandResponse!
  assignShift(assignShiftCommand: AssignShiftCommandEntity!): AssignShiftCommandResponse!
  unassignShift(unassignShiftCommand: UnassignShiftCommand!): UnassignShiftCommandResponse!
  newMember(member: CreateNewMember!): MemberEntity!
  updateMember(member: UpdateMember!): MemberEntity!
}

input CreateMembershipCommand {
  id: UUID
  requestId: UUID!
  startDate: Date!
  endDate: Date!
  memberId: UUID!
  membershipTypeId: UUID!
  actor: JSONObject!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

input AssignShiftCommandEntity {
  shiftId: String!
  slot: String!
  memberId: String!
  actor: JSONObject!
  requestId: String!
}

input UnassignShiftCommand {
  requestId: String!
  shiftAssignmentId: String!
  actor: JSONObject!
  reason: String!
}

input CreateNewMember {
  id: UUID
  firstName: String!
  lastName: String!
  email: EmailAddress!
  meta: JSONObject
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

input UpdateMember {
  id: UUID!
  firstName: String
  lastName: String
  email: String
  meta: JSONObject
}